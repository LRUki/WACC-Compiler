#!/bin/bash

echo 'Testing extension...'
make
rm ./ci/wacc-1.0-SNAPSHOT.jar
cp ./wacc-1.0-SNAPSHOT.jar ./ci
cd ./ci
rm -rf extension_test

ALL_FAIL_COUNT=0
ALL_SUCESS_COUNT=0
declare -A failCounter
declare -A successCounter

for FOLDER in `find ./extension_wacc/valid -type d -mindepth 1 -maxdepth 1`
do
  echo "--------------------------------------------------------------------"
  echo "Testing $FOLDER "
  echo "--------------------------------------------------------------------"

  FOLDERNAME=${FOLDER#*/*/*/}
  failCounter[$FOLDERNAME]=0
  successCounter[$FOLDERNAME]=0
  for WACC_FILENAME in `find $FOLDER -type f -iname "*.wacc" -exec sh -c 'printf "%s\n" "${0%.*}"' {} ';'`
  do
    FILENAME=${WACC_FILENAME#*/*/}
    mkdir -p extension_test/"${FILENAME%/*}"
    java -jar wacc-1.0-SNAPSHOT.jar extension_wacc/"$FILENAME".wacc extension_test/"$FILENAME".s $@

    if arm-linux-gnueabi-gcc -o extension_test/"$FILENAME" -mcpu=arm1176jzf-s -mtune=arm1176jzf-s "extension_test/${FILENAME}.s"
    then
      ASSEMBLE_SUCCESSFUL=0

      INPUT="/dev/null"
      if [ -f extension_examples/"$FILENAME".in ]
      then
        INPUT=extension_examples/"$FILENAME".in
      fi

      if [ ! -f extension_examples/"$FILENAME".out ]
      then
        echo -e "Skipping $FILENAME\n"
        continue
      fi

      timeout 5 qemu-arm -L /usr/arm-linux-gnueabi extension_test/"$FILENAME" <"$INPUT" | diff extension_examples/"$FILENAME".out - | head -n50
      PIPE_RESULT="${PIPESTATUS[0]} ${PIPESTATUS[1]}"
      EXITCODE=$(echo "$PIPE_RESULT" | cut -d' ' -f 1)

      OUTPUT_MATCHES=$(echo "$PIPE_RESULT" | cut -d' ' -f 2)
      if [ ! -z $(grep "$FILENAME"'$' "testextension.skip") ]
      then
        OUTPUT_MATCHES=0
        echo "Assume $FILENAME correct."
      fi

      echo "$EXITCODE" | diff - extension_examples/"$FILENAME".exitcode
      EXITCODE_MATCHES=$?
    else
      ASSEMBLE_SUCCESSFUL=1
    fi

    if [ "$ASSEMBLE_SUCCESSFUL" == 0 ] && [ "$OUTPUT_MATCHES" == 0 ] && [ "$EXITCODE_MATCHES" == 0 ]
    then
      echo -e "Success $FILENAME\n"
      successCounter[$FOLDERNAME]=$((1 + successCounter[$FOLDERNAME]))
    else
      echo -e "Failed $FILENAME\n"
      failCounter[$FOLDERNAME]=$((1 + failCounter[$FOLDERNAME]))
    fi
  done
  sc=${successCounter[$FOLDERNAME]}
  fc=${failCounter[$FOLDERNAME]}
  echo -e "test summary of $FOLDER:\npassed $sc / $((sc + fc))"
  ALL_SUCESS_COUNT=$((ALL_SUCESS_COUNT+ sc))
  ALL_FAIL_COUNT=$((ALL_FAIL_COUNT + fc))

done

echo "--------------------------------------------------------------------"


echo "TEST SUMMARY:"
echo "===================================================================="
for FOLDERNAME in "${!successCounter[@]}"
do
  sc=${successCounter[$FOLDERNAME]}
  fc=${failCounter[$FOLDERNAME]}
  echo "$FOLDERNAME: passed $sc/$((sc + fc))"
done
echo "===================================================================="
echo "Passed $ALL_SUCESS_COUNT / $((ALL_FAIL_COUNT + ALL_SUCESS_COUNT))"

if [ "$ALL_FAIL_COUNT" != 0 ]
then
  echo "Some tests failed."
  exit 1
fi
