image: maven:3.6.3-jdk-11

stages:
  - test-antlr
  - test-frontend
  - test-backend
  - test-extension

test-antlr:
  stage: test-antlr
  script:
    - echo "Testing build antlr"
    - make clean rules
    - ./testgrun

test-lexer:
  stage: test-frontend
  script:
    - echo "Testing lexer"
    - make clean rules
    - ./gradlew test --tests frontend.LexerTest

test-syntax:
  stage: test-frontend
  script:
    - echo "Testing syntax"
    - make clean rules
    - ./gradlew test --tests frontend.SyntaxTest

test-exitcode:
  stage: test-frontend
  script:
    - echo "Testing exitcodes"
    - make clean rules
    - ./gradlew test --tests frontend.ExitCodeTest

test-code-gen:
  stage: test-backend
  script:
    - echo "Testing code gen"
    - make clean rules
    - ./gradlew test --tests backend.TranslateTest

test-code-print:
  stage: test-backend
  script:
    - echo "Testing printing of code"
    - make clean rules
    - ./gradlew test --tests backend.PrintCodeTest

test-runtime-error:
  stage: test-backend
  script:
    - echo "Testing runtime error"
    - make clean rules
    - ./gradlew test --tests backend.RuntimeErrorTest

test-backend-integration:
  stage: test-backend
  script:
    - echo "Testing backend integration"
    - ./testassemble

test-optimization-integration:
  stage: test-extension
  script:
    - echo "Testing integrity with optimization"
    - ./testassemble -o

test-const-evaluation:
  stage: test-extension
  script:
    - echo "Testing const evaluation"
    - ./gradlew test --tests extension.ConstantEvaluationTest

test-syntax-extension:
  stage: test-extension
  script:
    - echo "Testing syntax"
    - make clean rules
    - ./gradlew test --tests extension.SyntaxTest

test-semantic-extension:
  stage: test-extension
  script:
    - echo "Testing semantics"
    - make clean rules
    - ./gradlew test --tests extension.SemanticTest
test-control-flow:
  stage: test-extension
  script:
    - echo "Testing control flow"
    - ./gradlew test --tests extension.ControlFlowTest


test-new-feature-integration:
  stage: test-extension
  script:
    - echo "Testing integrity with optimization"
    - ./testextension
